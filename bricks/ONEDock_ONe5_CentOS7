# This is a script for ONEDock installation.
# It is supposed to run in CentOS 7 environment.
#
# Copyright 2017 CESNET - INDIGO-DataCloud
#
# DOCS: https://indigo-dc.gitbooks.io/onedock/content/doc/install-centos.html
#
#!/bin/bash


################
# ONEDock server

# restart rpcbind service, just for sure
systemctl restart rpcbind

cd /var/tmp
wget https://github.com/indigo-dc/onedock/raw/master/install/centos/install-docker
bash install-docker

yum install -y docker-registry
#systemctl enable docker-registry.service
#service docker-registry start
systemctl enable docker-distribution
service docker-distribution start

wget https://github.com/indigo-dc/onedock/raw/master/install/centos/install-registry
bash install-registry

yum -y install jq xmlstarlet
 
#XXX: still not working yum -y install onedock-master
cd /var/tmp
wget wget https://github.com/indigo-dc/onedock/releases/download/v1.1/onedock-master-1.1-1.noarch.rpm
rpm -i onedock-master-1.1-1.noarch.rpm --replacefiles
service opennebula restart

# XXX: remove wrong/duplicate lines
sed -i '/Cmnd_Alias ONEDOCK.*/d' /etc/sudoers.d/opennebula
# add correct record
# XXX: use /var/lib/one/remotes/docker-manage-network (wiki says /var/tmp/one/docker-manage-network)
echo "Cmnd_Alias ONEDOCK = /var/lib/one/remotes/docker-manage-network,    /usr/bin/qemu-nbd, /sbin/losetup, /bin/mount" >>/etc/sudoers.d/opennebula

# XXX: buggy path
sed -i 's!^SCRIPTS_REMOTE_DIR=.*!SCRIPTS_REMOTE_DIR=/var/lib/one/remotes!'  /etc/one/oned.conf

systemctl restart opennebula

echo "Waiting ONe to settle"
for i in `seq 120`; do oneuser list 2>/dev/null 1>&2 && break; echo -n .; sleep 1; done
oneuser list


##############
# ONEDock node

yum install -y wget
cd /etc/yum.repos.d/
wget http://repo.indigo-datacloud.eu/repos/2/indigo2.repo
rpm --import http://repo.indigo-datacloud.eu/repository/RPM-GPG-KEY-indigodc
yum update -y --skip-broken

cd /var/tmp
wget https://github.com/indigo-dc/onedock/raw/master/install/centos/install-docker
bash install-docker

yum install -y onedock-node

#wget https://github.com/indigo-dc/onedock/releases/download/1.0-2/onedock-node-1.0-2.noarch.rpm
#rpm -i onedock-node-1.0-2.noarch.rpm


# XXX: remove wrong/duplicate lines
sed -i '/Cmnd_Alias ONEDOCK.*/d' /etc/sudoers.d/opennebula
# add correct record
# XXX: use /var/lib/one/remotes/docker-manage-network (wiki says /var/tmp/one/docker-manage-network)
echo "Cmnd_Alias ONEDOCK = /var/lib/one/remotes/docker-manage-network,    /usr/bin/qemu-nbd, /sbin/losetup, /bin/mount" >>/etc/sudoers.d/opennebula


# Create ONe infrastructure for onedock
#
cd /var/tmp
DATASTORE_NAME=onedock
TEMPLETE_NAME=onedock-ubuntu-sshd
CLUSTER_NAME=onedock
IMAGE_NAME=ubuntu
VNET_NAME=private
HOST_NAME=onedock-test


# Create datastore
cat > onedock.ds << EOF
NAME=$DATASTORE_NAME
DS_MAD=onedock
TM_MAD=onedock
EOF
su oneadmin -c "onedatastore create /var/tmp/onedock.ds"


# Create image
# - https://hub.docker.com/r/rastasheep/ubuntu-sshd/
# - access root/root
cat > ubuntu-docker.tmpl << EOF
NAME=$IMAGE_NAME
#PATH=docker://ubuntu:latest
PATH=docker://rastasheep/ubuntu-sshd
TYPE=OS
#DESCRIPTION="Ubuntu"
DESCRIPTION="Ubuntu Trusty with SSHd"
EOF
su oneadmin -c "oneimage create -d $DATASTORE_NAME /var/tmp/ubuntu-docker.tmpl"
while [ "`oneimage list| grep $IMAGE_NAME| grep lock`" ]; do echo -n .; sleep 1; done
# check status, in case of err try use '127.0.0.1 HOSTNAME' instead of 'IP HOSTNAME' in /etc/hosts
su oneadmin -c "oneimage chmod $IMAGE_NAME 666"


# Create network
cat > docker-private.net << EOF
NAME=#VNET_NAME
BRIDGE=docker0
NETWORK_ADDRESS = "172.17.0.1"
NETWORK_MASK    = "255.255.0.0"
DNS             = "172.17.0.1"
GATEWAY         = "172.17.0.1"
AR=[TYPE = "IP4", IP = "172.17.10.1", SIZE = "100" ]
VN_MAD = "dummy"
EOF
su oneadmin -c "onevnet create /var/tmp/docker-private.net"


# Create host
echo "127.0.0.1 $HOST_NAME" >> /etc/hosts
su oneadmin -c "onehost create $HOST_NAME -i onedock -v onedock"


# Create template
#onetemplate create --name "onedock-ubuntu-sshd" --memory 128 --cpu 1 --disk oneadmin[ubuntu] --nic oneadmin[private] --vnc --vnc-password onedock --vnc-listen 0.0.0.0 --net_context
cat >/var/tmp/onedock.template <<EOF
NAME=$TEMPLATE_NAME
MEMORY=128
CPU=1
DISK=[
  IMAGE=$IMAGE_NAME,
  IMAGE_UNAME="oneadmin" ]
NIC=[
  NETWORK=$VNET_NAME,
  NETWORK_UNAME="oneadmin" ]
CONTEXT=[
  NETWORK="YES" ]
GRAPHICS=[
  LISTEN="0.0.0.0",
  PASSWD="onedock",
  TYPE="vnc" ]
EOF
onetemplate create /var/tmp/onedock.template
su oneadmin -c "onetemplate chmod $$TEMPLATE_NAME 666"


# Create cluster
su oneadmin -c "onecluster create $CLUSTER_NAME"
su oneadmin -c "onecluster addhost $CLUSTER_NAME $HOST_NAME"
su oneadmin -c "onecluster adddatastore $CLUSTER_NAME $DATASTORE_NAME"
su oneadmin -c "onecluster adddatastore $CLUSTER_NAME system"
su oneadmin -c "onecluster addvnet $CLUSTER_NAME $VNET_NAME"

